name: Build and Release CMSV Video Generator

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Install Fyne command
        run: go install fyne.io/fyne/v2/cmd/fyne@latest

      - name: Create application icon
        shell: powershell
        run: |
          # Create a simple placeholder icon if none exists
          if (!(Test-Path "Icon.png")) {
            # Download Fyne logo as placeholder or create a simple colored rectangle
            Write-Output "Creating placeholder icon..."
            # For now, we'll package without icon and let it use default
          }

      - name: Build Windows executable
        run: |
          fyne package -os windows -name "CMSV-Video-Generator"

      - name: Prepare Windows artifact
        run: |
          mkdir dist
          move "CMSV-Video-Generator.exe" "dist/cmsv-video-generator-windows-amd64.exe"
          copy "config.ini" "dist/config.ini.example"

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-amd64
          path: dist/*

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc pkg-config libgl1-mesa-dev xorg-dev libasound2-dev

      - name: Install Fyne command
        run: go install fyne.io/fyne/v2/cmd/fyne@latest

      - name: Build Linux executable
        env:
          CGO_ENABLED: 1
        run: |
          fyne package -os linux -name "CMSV-Video-Generator"

      - name: Prepare Linux artifact
        run: |
          mkdir dist
          mv "CMSV-Video-Generator" "dist/cmsv-video-generator-linux-amd64"
          cp "config.ini" "dist/config.ini.example"

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux-amd64
          path: dist/*

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Install Fyne command
        run: go install fyne.io/fyne/v2/cmd/fyne@latest

      - name: Build macOS application
        run: |
          fyne package -os darwin -name "CMSV-Video-Generator"

      - name: Prepare macOS artifact
        run: |
          mkdir dist
          tar -czf "dist/cmsv-video-generator-darwin-amd64.tar.gz" "CMSV-Video-Generator.app"
          cp "config.ini" "dist/config.ini.example"

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v3
        with:
          name: darwin-amd64
          path: dist/*

  release:
    needs: [build-windows, build-linux, build-macos]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Prepare release files
        run: |
          mkdir -p release
          find artifacts -type f -exec cp {} release/ \;
          
          # Create installation instructions
          cat > release/README.txt << 'EOF'
          CMSV Video Generator Installation Instructions
          
          WINDOWS:
          1. Download: cmsv-video-generator-windows-amd64.exe
          2. Copy config.ini.example to config.ini
          3. Edit config.ini with your server settings
          4. Double-click the .exe to run
          
          LINUX:
          1. Download: cmsv-video-generator-linux-amd64
          2. Copy config.ini.example to config.ini  
          3. Edit config.ini with your server settings
          4. Make executable: chmod +x cmsv-video-generator-linux-amd64
          5. Run: ./cmsv-video-generator-linux-amd64
          
          MACOS:
          1. Download and extract: cmsv-video-generator-darwin-amd64.tar.gz
          2. Copy config.ini.example to config.ini
          3. Edit config.ini with your server settings
          4. Run the extracted .app file
          
          Configuration (config.ini):
          - Set your server_url (currently: https://ahd.samsonix.com)
          - Adjust ports if needed
          - Toggle UI elements visibility (1=show, 0=hide)
          EOF

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/*
          generate_release_notes: true
          body: |
            ## CMSV Video Generator Release
            
            ### Features:
            - 🚗 Vehicle information display with real-time status
            - 🚨 Device alarm monitoring with auto-refresh capability  
            - 📺 RTSP/RTMP/HLS streaming link generation
            - ⚙️ Configurable UI elements and server settings
            - 🗺️ Multiple coordinate system support (WGS84, GCJ-02, BD09)
            - 📊 Equipment status parsing with detailed descriptions
            - 📝 Automatic alarm logging to file
            
            ### Downloads:
            - **Windows**: `cmsv-video-generator-windows-amd64.exe`
            - **Linux**: `cmsv-video-generator-linux-amd64`  
            - **macOS**: `cmsv-video-generator-darwin-amd64.tar.gz`
            
            ### Quick Start:
            1. Download the appropriate binary for your OS
            2. Copy `config.ini.example` to `config.ini`
            3. Configure your server URL and preferences
            4. Run the application
            
            ### Configuration Options:
            Edit `config.ini` to customize:
            - Server URLs and ports
            - UI element visibility
            - Streaming service endpoints
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}